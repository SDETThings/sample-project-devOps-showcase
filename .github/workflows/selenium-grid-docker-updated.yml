name: Run Tests on Dockerized Selenium Grid - updated

on:
  workflow_dispatch:

jobs:
  selenium-grid-tests:
    runs-on: ubuntu-latest

    steps:
      # 📦 Step: Checkout the project source code
      - name: Checkout code
        uses: actions/checkout@v3

      # ⚙️ Step: Set up Java 21 environment (for compiling the code)
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'adopt'
          cache: maven

      # 🐳 Step: Install Docker Compose (used to start Selenium Grid)
      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose

      # 🛠️ Step: Compile your project and copy jars to a libs folder
      - name: Package the project
        run: |
          mvn clean package -DskipTests

      # 🚦 Step: Start Selenium Grid using Docker Compose (Hub + Chrome + Firefox)
      - name: Start Selenium Grid
        run: docker-compose -f src/test/resources/Docker-resources/selenium-grid-hub-and-nodes.yaml up -d

      # 🏗️ Step: Build a lightweight test runner Docker image with Java only, Includes runner.sh, libs/, and test suite XMLs
      - name: Build Java-only Test Runner Image
        run: |
          docker build -t my-java-test-runner .

      # 🧪 Step: Ensure Docker network (grid) exists
      - name: Ensure Docker network exists
        run: |
          docker network inspect grid >/dev/null 2>&1 || docker network create grid

      # 🧪 Step: Run the test container (mapped to the Selenium Grid network)
      #           Pass environment variables to runner.sh
      #           Mounts `testCaseResults` to collect results from inside the container
      - name: Run Tests in Container
        run: |
          mkdir -p testCaseResults
          docker run --rm \
            --name runner \
            --network grid \
            -e HUB_HOST=selenium-hub \
            -e BROWSER=chrome \
            -e THREAD_COUNT=4 \
            -e TEST_SUITE=flight-reservation.xml \
            -v ${{ github.workspace }}/testCaseResults:/app/testCaseResults \
            my-java-test-runner

      # 📤 Step: Upload test results folder to GitHub as an artifact
      - name: Upload testCaseResults
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: ./testCaseResults

      # 🧹 Step: Shut down Selenium Grid and clean up containers
      - name: Clean up Docker containers
        run: docker-compose -f src/test/resources/Docker-resources/selenium-grid-hub-and-nodes.yaml down
